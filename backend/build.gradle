buildscript {

    repositories {
        maven { url "http://repo.spring.io/milestone" }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }
}

apply plugin: "application"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "org.springframework.boot"

version = "0.0.1-SNAPSHOT"

mainClassName = "com.github.kieronqtran.Application"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

sourceSets {
    main.java.srcDirs += "src/main/java"
    main.resources.srcDirs += "src/main/resources"
    main.kotlin.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/java"
    test.kotlin.srcDirs += "src/test/java"
    test.resources.srcDirs += "src/test/resources"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-webflux:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("com.h2database:h2:$h2DatabaseVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    compile("io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("com.nhaarman:mockito-kotlin-kt1.1:$mockitoVersion")
    testCompile("org.amshove.kluent:kluent:$kluentVersion")
    testCompile("io.damo.aspen:aspen:$aspenVersion")
    testCompile("io.damo.aspen:aspen-spring:$aspenVersion")
    testCompile("com.squareup.okhttp3:okhttp:$okHttpVersion")
}
